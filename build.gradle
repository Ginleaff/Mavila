// Mostly based on: https://github.com/Ladysnake/Cardinal-Components-API/blob/1.17/build.gradle
// Somewhat based on: https://github.com/PuzzleMC/Puzzle/blob/1.21/build.gradle
// If you are building your own multi-mod, the answer is the 'subprojects.each' block in dependencies.

plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
}

base {
	archivesName = mod_name
}
group = mod_group

subprojects {
	apply plugin: 'fabric-loom'

	base {
		archivesName = project.name
	}
	group = "${rootProject.group}.${base.archivesName}"

	fabricApi {
		configureDataGeneration()
	}
}

allprojects {
	apply plugin: "fabric-loom"
	sourceCompatibility = targetCompatibility = JavaVersion.VERSION_21

	version = mod_version

	dependencies {
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

		subprojects.each {
			api project(path: ":${it.name}")
			include project(":${it.name}")
		}
	}

	processResources {
		inputs.property "version", project.version

		filesMatching("fabric.mod.json") {
			expand "version": project.version
		}
	}

	tasks.withType(JavaCompile).configureEach {
		it.options.encoding = "UTF-8"
		it.options.release = 21
	}

	java {
		withSourcesJar()
	}

	jar {
		from("LICENSE") {
			rename { "${it}_${base.archivesName.get()}"}
		}
	}
}